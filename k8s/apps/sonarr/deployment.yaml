apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarr
spec:
  selector:
    matchLabels:
      app: sonarr
  template:
    metadata:
      labels:
        app: sonarr
    spec:
      hostname: sonarr
      volumes:
        - name: tmp
          emptyDir: {}
        - name: config
          persistentVolumeClaim:
            claimName: sonarr-config
        - name: arr-media
          nfs:
            server: truenas.holywoo.cbannister.xyz
            path: /mnt/bighorse/arr
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        runAsNonRoot: true
      containers:
        - name: sonarr
          image: ghcr.io/onedr0p/sonarr-develop:rolling@sha256:1e0398f1371395e7452df3302c6ac3157638f394b29dbb79e1afc36c1214438b
          imagePullPolicy: "IfNotPresent"
          env:
            - name: DOTNET_EnableDiagnostics
              value: "0"
            - name: DOTNET_gcServer
              value: "1"
          resources:
            requests:
              memory: "512Mi"
              cpu: "500m"
            limits:
              memory: 8192Mi
              cpu: 4000m
          ports:
            - containerPort: 8989
              name: web
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: config
              mountPath: /config
              readOnly: false
            - name: arr-media
              mountPath: /data
          startupProbe:
            httpGet:
              path: /ping
              port: web
            failureThreshold: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /ping
              port: web
            initialDelaySeconds: 10
            periodSeconds: 20
            timeoutSeconds: 5
            failureThreshold: 5
