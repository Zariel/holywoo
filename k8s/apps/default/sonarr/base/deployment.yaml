apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarr
  labels:
    app: sonarr
spec:
  selector:
    matchLabels:
      app: sonarr
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: sonarr
    spec:
      hostname: sonarr
      volumes:
        - name: arr-media
          persistentVolumeClaim:
            claimName: bighorse-arr-media
        - name: config
          persistentVolumeClaim:
            claimName: sonarr-config
        - name: scripts
          configMap:
            name: sonarr-scripts
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        runAsNonRoot: true
      containers:
        - name: sonarr
          image: ghcr.io/onedr0p/sonarr-develop:4.0.8.2008@sha256:737662938d4373ec8b5d80ac37bb96c24637cb1871bc55c74c54ad66af43fafd
          imagePullPolicy: "IfNotPresent"
          env:
            - name: DOTNET_EnableDiagnostics
              value: "0"
            - name: DOTNET_gcServer
              value: "1"
            - name: SONARR__API_KEY
              value: e5434fb6e4c04bc5a797103d41714d38
            - name: SONARR__POSTGRES_HOST
              value: postgres.cbannister.casa
            - name: SONARR__POSTGRES_USER
              value: holywoo
            - name: SONARR__POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: password
          envFrom:
            - configMapRef:
                name: sonarr-env-config
          resources:
            requests:
              cpu: "512m"
              memory: "2024Mi"
            limits:
              memory: 2024Mi
          ports:
            - containerPort: 8989
              name: web
          volumeMounts:
            - name: arr-media
              mountPath: /data
            - name: config
              mountPath: /config
            - name: scripts
              mountPath: /scripts
              readOnly: true
              recursiveReadOnly: "Enabled"
          startupProbe:
            httpGet:
              path: /ping
              port: web
            failureThreshold: 6
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /ping
              port: web
            initialDelaySeconds: 10
            periodSeconds: 20
            timeoutSeconds: 5
            failureThreshold: 5
