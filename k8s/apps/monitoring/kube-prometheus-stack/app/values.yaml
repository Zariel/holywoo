crds:
  enabled: true
cleanPrometheusOperatorObjectNames: true
namespaceOverride: monitoring
prometheus:
  ingress:
    enabled: true
    ingressClassName: internal
    pathType: Prefix
    hosts: &hosts
      - prometheus.holywoo.cbannister.xyz
    tls:
      - hosts: *hosts
  thanosService:
    enabled: true
  thanosServiceMonitor:
    enabled: true
  prometheusSpec:
    replicas: 2
    replicaExternalLabelName: __replica__
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    probeSelectorNilUsesHelmValues: false
    scrapeConfigSelectorNilUsesHelmValues: false
    enableAdminAPI: true
    walCompression: true
    enableFeatures:
      - auto-gomaxprocs
      - memory-snapshot-on-shutdown
      - new-service-discovery-manager
    thanos:
      image: quay.io/thanos/thanos:v0.34.1
      objectStorageConfig:
        existingSecret:
          name: thanos-objstore-secret
          key: objstore.yml
    retention: 2d
    retentionSize: 15GB
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: ceph-block
          resources:
            requests:
              storage: 20Gi
alertmanager:
  enabled: true
  ingress:
    enabled: true
    ingressClassName: internal
    pathType: Prefix
    hosts:
      - &host alertmanager.holywoo.cbannister.xyz
    tls:
      - hosts:
          - *host
  alertmanagerSpec:
    replicas: 2
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: ceph-block
          resources:
            requests:
              storage: 1Gi
kubelet:
  enabled: true
  serviceMonitor:
    metricRelabelings:
      # Drop high cardinality labels
      - action: labeldrop
        regex: (uid)
      - action: labeldrop
        regex: (id|name)
      - action: drop
        sourceLabels: ["__name__"]
        regex: (rest_client_request_duration_seconds_bucket|rest_client_request_duration_seconds_sum|rest_client_request_duration_seconds_count)
kubeApiServer:
  enabled: true
  serviceMonitor:
    metricRelabelings:
      # Drop high cardinality labels
      - action: drop
        sourceLabels: ["__name__"]
        regex: (apiserver|etcd|rest_client)_request(|_sli|_slo)_duration_seconds_bucket
      - action: drop
        sourceLabels: ["__name__"]
        regex: (apiserver_response_sizes_bucket|apiserver_watch_events_sizes_bucket)
kubeControllerManager:
  enabled: true
  endpoints: &cp
    - 10.1.1.10
    - 10.1.1.11
    - 10.1.1.12
  serviceMonitor:
    metricRelabelings:
kubeEtcd:
  enabled: true
  endpoints: *cp
kubeScheduler:
  enabled: true
  endpoints: *cp
kubeProxy:
  enabled: false
nodeExporter:
  enabled: true
prometheus-node-exporter:
  fullnameOverride: node-exporter
  prometheus:
    monitor:
      enabled: true
      relabelings:
        - action: replace
          regex: (.*)
          replacement: $1
          sourceLabels:
            - __meta_kubernetes_pod_node_name
          targetLabel: kubernetes_node
kubeStateMetrics:
  enabled: true
kube-state-metrics:
  fullnameOverride: kube-state-metrics
  metricLabelsAllowlist:
    - pods=[*]
    - deployments=[*]
    - persistentvolumeclaims=[*]
  prometheus:
    monitor:
      enabled: true
      relabelings:
        - action: replace
          regex: (.*)
          replacement: $1
          sourceLabels: ["__meta_kubernetes_pod_node_name"]
          targetLabel: kubernetes_node
grafana:
  enabled: false
  forceDeployDashboards: true
  sidecar:
    dashboards:
      multicluster:
        etcd:
          enabled: true
